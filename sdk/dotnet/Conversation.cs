// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Slack
{
    [SlackResourceType("slack:index:Conversation")]
    public partial class Conversation : Pulumi.CustomResource
    {
        [Output("channel")]
        public Output<Outputs.Channel> Channel { get; private set; } = null!;

        [Output("isArchived")]
        public Output<bool?> IsArchived { get; private set; } = null!;

        [Output("isPrivate")]
        public Output<bool?> IsPrivate { get; private set; } = null!;

        [Output("members")]
        public Output<ImmutableArray<string>> Members { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("purpose")]
        public Output<string?> Purpose { get; private set; } = null!;

        [Output("topic")]
        public Output<string?> Topic { get; private set; } = null!;


        /// <summary>
        /// Create a Conversation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Conversation(string name, ConversationArgs args, CustomResourceOptions? options = null)
            : base("slack:index:Conversation", name, args ?? new ConversationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Conversation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("slack:index:Conversation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Conversation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Conversation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Conversation(name, id, options);
        }
    }

    public sealed class ConversationArgs : Pulumi.ResourceArgs
    {
        [Input("isArchived")]
        public Input<bool>? IsArchived { get; set; }

        [Input("isPrivate")]
        public Input<bool>? IsPrivate { get; set; }

        [Input("members")]
        private InputList<string>? _members;
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("purpose")]
        public Input<string>? Purpose { get; set; }

        [Input("topic")]
        public Input<string>? Topic { get; set; }

        public ConversationArgs()
        {
        }
    }
}
